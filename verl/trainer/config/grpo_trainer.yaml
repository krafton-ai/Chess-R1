hydra:
  run:
    dir: outputs/${trainer.user_name}/${trainer.group_name}/${trainer.experiment_name}

trainer:
  total_training_steps: null # Set this to not be constrained by the number of epochs!!!
  user_name: test
  group_name: test
  experiment_name: test
  logger: [ 'console', 'wandb', 'tensorboard' ]
  val_generations_to_log_to_wandb: 0
  nnodes: 1
  n_gpus_per_node: 4
  save_freq: -1
  resume_from_path: False
  test_freq: -1
  remove_previous_ckpt_in_save: False
  del_local_ckpt_after_load: False
  default_local_dir: outputs/${trainer.user_name}/${trainer.group_name}/${trainer.experiment_name}/checkpoint
  default_hdfs_dir: outputs/${trainer.user_name}/${trainer.group_name}/${trainer.experiment_name}/checkpoint
  sp_freq: 0
  sp_alpha: 0.0

data:
  seed: 1
  tokenizer: null
  train_files: ~/data/rlhf/gsm8k/train.parquet
  val_files: ~/data/rlhf/gsm8k/test.parquet
  prompt_key: prompt
  max_prompt_length: 256
  max_response_length: 1024
  train_batch_size: 1024
  val_batch_size: null # Validation datasets are sent to inference engines as a whole batch, set None.
  return_raw_input_ids: False  # This should be set to true when the tokenizer between policy and rm differs
  return_raw_chat: False
  shuffle: True
  train_num_workers: 0 # JAX only allows num_workers=0 for the dataloader
  val_num_workers: 0 # JAX only allows num_workers=0 for the dataloader

actor_rollout_ref:
  hybrid_engine: True
  model:
    path: "Qwen/Qwen2.5-1.5B"
    external_lib: null
    override_config: { }
    enable_gradient_checkpointing: True
    use_remove_padding: True
    trust_remote_code: False
  actor:
    strategy: fsdp
    epochs: 1
    mini_batch_size: 128
    micro_batch_size_per_gpu: 4
    use_dynamic_bsz: False
    max_token_len_per_gpu: 16384 # n * ${data.max_prompt_length} + ${data.max_response_length}
    grad_clip: 1.0
    clip_ratio: 0.2
    entropy_coeff: 0.001
    use_kl_loss: True
    kl_loss_coef: 0.001
    kl_loss_type: low_var_kl
    shuffle: False
    ulysses_sequence_parallel_size: 1 # sp size
    use_token_level_loss: False # DAPO
    optim:
      lr: 1e-6
      lr_warmup_steps_ratio: 0.  # the total steps will be injected during runtime
      min_lr_ratio: null   # only useful for warmup with cosine
      warmup_style: constant  # select from constant/cosine
      total_training_steps: -1  # must be override by program
    fsdp_config:
      wrap_policy:
        min_num_params: 0
      param_offload: False
      optimizer_offload: False
      fsdp_size: -1
  rollout:
    name: vllm
    temperature: 1.0
    top_k: -1 # 0 for hf rollout, -1 for vllm rollout
    top_p: 1
    prompt_length: ${data.max_prompt_length}  # not use for opensource
    response_length: ${data.max_response_length}
    # for vllm rollout
    dtype: bfloat16 # should align with FSDP
    gpu_memory_utilization: 0.5
    ignore_eos: False
    enforce_eager: True
    free_cache_engine: True
    load_format: dummy_dtensor
    tensor_model_parallel_size: 2
    max_num_batched_tokens: 8192
    max_model_len: null
    max_num_seqs: 1024
    log_prob_micro_batch_size_per_gpu: ${actor_rollout_ref.actor.max_token_len_per_gpu}
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.max_token_len_per_gpu}
    disable_log_stats: True
    enable_chunked_prefill: True # may get higher throughput when set to True.
    # for hf rollout
    do_sample: True
    n: 4 # > 1 for grpo
    validate:
      num_rollouts_for_eval: 1
      
  ref:
    fsdp_config:
      param_offload: False
      wrap_policy:
        # transformer_layer_cls_to_wrap: None
        min_num_params: 0
    log_prob_micro_batch_size_per_gpu: ${actor_rollout_ref.actor.max_token_len_per_gpu}
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.max_token_len_per_gpu}
    ulysses_sequence_parallel_size: ${actor_rollout_ref.actor.ulysses_sequence_parallel_size} # sp size

reward_model:
  chess_model_type: action_value # [action_value, behavioral_cloning, state_value]
  format_reward: 0.1
  english_reward: 0.1
  answer_reward: 0.0 # additional reward added when model correctly selects the best optimal action
  qvalue_reward_scaler: 1.0
  enable: False
  strategy: fsdp
  model:
    input_tokenizer: ${actor_rollout_ref.model.path}  # set this to null if the chat template is identical
    path: ~/models/FsfairX-LLaMA3-RM-v0.1
    external_lib: ${actor_rollout_ref.model.external_lib}
    use_remove_padding: False
    fsdp_config:
      min_num_params: 0
      param_offload: False
      fsdp_size: -1
  micro_batch_size_per_gpu: 4

algorithm:
  gamma: 1.0
  lam: 1.0
  adv_estimator: grpo
  kl_penalty: kl  # how to estimate kl divergence
  kl_coef: 0.001
  max_num_gen_batches: 3 # DAPO: Non-positive values mean no upper limit
  discard_zero_adv_samples: # DAPO
    enable: False 
  discard_maxgenlen_samples: # DAPO
    enable: False 
    max_response_length: ${data.max_response_length}
